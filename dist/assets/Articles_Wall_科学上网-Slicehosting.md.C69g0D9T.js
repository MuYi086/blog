import{_ as e,o,c,a7 as a}from"./chunks/framework.CgLK9O2D.js";const _=JSON.parse('{"title":"科学上网-Slicehosting","description":"","frontmatter":{"tags":["Wall"]},"headers":[],"relativePath":"Articles/Wall/科学上网-Slicehosting.md","filePath":"Articles/Wall/科学上网-Slicehosting.md","lastUpdated":1719417334000}'),d={name:"Articles/Wall/科学上网-Slicehosting.md"},l=a('<h1 id="科学上网-slicehosting" tabindex="-1">科学上网-Slicehosting <a class="header-anchor" href="#科学上网-slicehosting" aria-label="Permalink to &quot;科学上网-Slicehosting&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>利用 <code>Slicehosting</code> 空间搭建免费科学上网节点，作为一个备用梯子。</p><div class="warning custom-block"><p class="custom-block-title">注意</p><p>不稳定，用了一天服务就 <code>ban</code> 了，登录面板一切正常，重启依旧不能正常代理</p></div><h2 id="注册" tabindex="-1">注册 <a class="header-anchor" href="#注册" aria-label="Permalink to &quot;注册&quot;">​</a></h2><p>打开官网 <a href="https://dash.slicehosting.tech/" target="_blank" rel="noreferrer">https://dash.slicehosting.tech/</a> 点击 <code>Login with Discord</code> 按钮进行注册</p><h2 id="创建服务器" tabindex="-1">创建服务器 <a class="header-anchor" href="#创建服务器" aria-label="Permalink to &quot;创建服务器&quot;">​</a></h2><p>进入控制面板，点击 <code>Create a server</code> 按钮, 只需输入服务器名称，选择服务器地址(目前有德国和新加坡节点可选)，选择服务器软件 <code>purpur</code> (配置最佳,有 <code>2048M</code> 内存)，点击 <code>Create server</code> 即可创建成功。<code>CPU</code> 默认占用是 <code>50%</code> ，所以 <code>Slicehosting</code> 默认可以创建2个地区的服务器。</p><p>点击左侧 <code>Control panel</code> 选择 <code>Reset password</code> , 记录弹窗里的一次性密码</p><p>服务器 <code>install</code> 后，点击 <code>Open</code> ，输入账号和刚才获得的密码，登录服务器，开始搭建节点。</p><h2 id="上传节点代码文件" tabindex="-1">上传节点代码文件 <a class="header-anchor" href="#上传节点代码文件" aria-label="Permalink to &quot;上传节点代码文件&quot;">​</a></h2><ol><li><p>进入 <code>Flie</code> 页面，删除 <code>server.jar</code> 文件</p></li><li><p>克隆 <a href="https://github.com/dsadsadsss/java-wanju" target="_blank" rel="noreferrer">https://github.com/dsadsadsss/java-wanju</a> 项目并上传 <code>c.yml</code> 和 <code>server.jar</code> 这两个文件 (已备份到比特球)</p></li><li><p>点击打开 <code>c.yml</code> 文件，需要修改 <code>3</code> 个地方的信息，分别是自己的 <code>ARGO</code> 域名，及其 <code>CloudFlare Token</code> 值和 <code>UUID</code></p><ul><li><p>登录 <code>CloudFlare</code>，点击左侧的 <code>Zero Trust</code>, 选择 <code>Networks</code> 下的 <code>Tunnels</code>, 创建一个新隧道，复制生成的 <code>Token</code>，右键三个点配置添加自定义域名 (最好填二级域名), 选择类型 <code>HTTP</code> ，<code>URL</code> 地址注意要根据节点类型来确定, 一般选 <code>vless</code> 填 <code>localhost:8002</code>, 复制 <code>Subdomain</code> + <code>domain</code> 生成的域名</p></li><li><p>通过 <a href="https://uutool.cn/uuid/" target="_blank" rel="noreferrer">https://uutool.cn/uuid/</a> 生成 <code>UUID</code></p><div class="warning custom-block"><p class="custom-block-title">注意</p><p><code>vmess</code> 端口：<code>localhost:8001</code></p><p><code>vless</code> 端口：<code>localhost:8002</code></p><p>删除 <code>TOK</code> 和 <code>ARCO_DOMAIN</code> 所在行前的 <code>#</code>，使该行能够生效。</p><p><code>TOK</code> 数值只粘贴去除 <code>cloudflared.exe service install</code> 后的字段，包括之间的空格。</p></div></li></ul></li><li><p>回到控制台，点击 <code>Start</code> ，服务器会运行上传的文件程序。稍等几分钟后(一般 <code>6</code> 到 <code>7</code> 分钟左右)，就会出现节点信息。</p><div class="warning custom-block"><p class="custom-block-title">注意</p><p>但是由于厂商把节点信息给屏蔽掉了，直接是看不到的，需要手动创建节点信息。</p><p>可以手动添加或者利用上面项目里的 <code>slicehostinghelper.com.exe</code> 生成 <code>vless</code> 链接</p></div></li></ol><div class="danger custom-block"><p class="custom-block-title">危险</p><p>Users have to log in to the dashboard within every 7 days, otherwise, servers will be suspended.</p><p>用户必须在每 7 天内登录仪表板，否则服务器将被暂停。</p></div><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ol><li><a href="https://www.5iehome.cc/archives/using-slicehosting-to-build-free-node.html" target="_blank" rel="noreferrer">利用 Slicehosting 搭建免费科学上网节点</a></li><li><a href="https://github.com/shiteThings/slicehosting" target="_blank" rel="noreferrer">Slicehosting Helper</a></li><li><a href="https://github.com/dsadsadsss/java-wanju" target="_blank" rel="noreferrer">java-wanju</a></li></ol><div style="display:none;" data-pagefind-meta="base64:JTdCJTIydGFncyUyMiUzQSU1QiUyMldhbGwlMjIlNUQlMkMlMjJkYXRlJTIyJTNBMTcxOTQxNzMzNDAwMCU3RA=="></div>',16),t=[l];function s(i,r,n,h,p,u){return o(),c("div",null,t)}const b=e(d,[["render",s]]);export{_ as __pageData,b as default};
