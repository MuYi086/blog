import{_ as s,o as i,c as a,a7 as n}from"./chunks/framework.CgLK9O2D.js";const t="/assets/vitepress_blog_token.qoe73KQw.png",e="/assets/github_pages.Dk_2Z7wB.png",A=JSON.parse('{"title":"通过GithubAction将内容部署到vps","description":"","frontmatter":{"tags":["Node"]},"headers":[],"relativePath":"Articles/Node/通过GithubAction将内容部署到vps.md","filePath":"Articles/Node/通过GithubAction将内容部署到vps.md","lastUpdated":1719417334000}'),l={name:"Articles/Node/通过GithubAction将内容部署到vps.md"},h=n(`<h1 id="通过githubaction将内容部署到vps" tabindex="-1">通过GithubAction将内容部署到vps <a class="header-anchor" href="#通过githubaction将内容部署到vps" aria-label="Permalink to &quot;通过GithubAction将内容部署到vps&quot;">​</a></h1><h2 id="创建action文件" tabindex="-1">创建Action文件 <a class="header-anchor" href="#创建action文件" aria-label="Permalink to &quot;创建Action文件&quot;">​</a></h2><p>在项目根目录创建 <code>.github/workflows/ci.yml</code></p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 标题</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GitHub Actions 部署 vitepress 博客</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 触发时机:表示推送master分支时触发</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    branches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">master</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 任务列表</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">jobs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  build-and-deploy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 运行环境</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    runs-on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ubuntu-latest</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 步骤</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 步骤1:安装Node.js</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Setup Node.js</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/setup-node@v4</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        node-version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 步骤2:检出代码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Checkout</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/checkout@v4</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 步骤3:安装yarn</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Install yarn</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">npm install -g yarn</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 步骤4:安装依赖</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Install dependencies</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">yarn install</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 步骤5:构建VitePress</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Build VitePress</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">yarn run docs:build</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 步骤6:部署到Github Pages</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # - name: Deploy to Github Pages</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #   uses: peaceiris/actions-gh-pages@v3</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #   with:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #     github_token: \${{ secrets.VITEPRESS_BLOG_TOKEN }} # 自定义的action环境变量</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #     publish_dir: .vitepress/dist # 指定部署目录</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #     publish_branch: gh-pages # 指定部署分支</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #     dotfiles: true # 允许使用.gitignore文件</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 步骤7: scp部署到 vps</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Deploy to VPS</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">appleboy/scp-action@master</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ secrets.SERVER_HOST }}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 服务器地址</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ secrets.SERVER_USER }}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 服务器用户名</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ secrets.SERVER_PORT }}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 服务器端口</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ secrets.SERVER_SSH_KEY }}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 服务器SSH 密钥</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # password: \${{ secrets.SERVER_USER_PASSWORD }} # 服务器用户密码</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        strip_components</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 跳过指定目录</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.vitepress/dist&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 源目录</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ secrets.SERVER_TARGET }}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 目标目录</span></span></code></pre></div><h2 id="配置-action-环境变量" tabindex="-1">配置 Action 环境变量 <a class="header-anchor" href="#配置-action-环境变量" aria-label="Permalink to &quot;配置 Action 环境变量&quot;">​</a></h2><ol><li>右上角头像 =&gt; <code>Settings</code> =&gt; <code>Developer Settings</code> =&gt; <code>Personal access tokens</code> =&gt; <code>Tokens(classic)</code> =&gt; <code>Generate new token</code></li></ol><p><img src="`+t+'" alt="vitepress_blog_token" title="vitepress_blog_token"></p><div class="warning custom-block"><p class="custom-block-title">注意</p><p>存储生成的 <code>token</code> ，请妥善保管，永远只出现一次。</p></div><h2 id="仓库添加环境变量" tabindex="-1">仓库添加环境变量 <a class="header-anchor" href="#仓库添加环境变量" aria-label="Permalink to &quot;仓库添加环境变量&quot;">​</a></h2><ol><li><p>打开仓库主页 =&gt; <code>Settings</code> =&gt; <code>Secrets and variables</code> =&gt; <code>Actions</code> =&gt; <code>New repository secret</code> =&gt; 填入变量名和 <code>token</code></p></li><li><p>推送本地代码，<code>github action</code> 检测到 <code>ci.yml</code> 文件，自动触发部署，将编译后的 <code>dist</code> 部署到 <code>gh-pages</code> 分支</p></li></ol><h2 id="配置github-pages" tabindex="-1">配置github pages <a class="header-anchor" href="#配置github-pages" aria-label="Permalink to &quot;配置github pages&quot;">​</a></h2><ol><li>打开仓库主页 =&gt; <code>Settings</code> =&gt; <code>Pages</code> =&gt; <code>Source</code> =&gt; 选择 <code>gh-pages</code> 分支 =&gt; <code>Save</code></li></ol><p><img src="'+e+`" alt="github_pages" title="github_pages"></p><h2 id="配置action-scp-部署到vps" tabindex="-1">配置action scp 部署到vps <a class="header-anchor" href="#配置action-scp-部署到vps" aria-label="Permalink to &quot;配置action scp 部署到vps&quot;">​</a></h2><ol><li><p>登录 <code>vps</code> ，生成 <code>SSH</code> 秘钥</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 生成ssh秘钥</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4096</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;github-actions-node&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将公钥复制到服务器的authorized_keys文件中</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /root/.ssh/id_rsa.pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /root/.ssh/authorized_keys</span></span></code></pre></div></li><li><p>配置 <code>Actions Secrets</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打印私钥，复制粘贴到github action环境变量中，命名为SSH_KEY</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /root/.ssh/id_rsa</span></span></code></pre></div></li></ol><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ol><li><a href="https://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html" target="_blank" rel="noreferrer">GitHub Actions 入门教程</a></li><li><a href="https://docs.github.com/zh/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens" target="_blank" rel="noreferrer">Github 管理个人访问令牌</a></li><li><a href="https://tourcoder.com/deploy-from-github-to-vps-via-github-action/" target="_blank" rel="noreferrer">通过 Github Action 将 GitHub 上的内容部署到 VPS</a></li><li><a href="https://blog.csdn.net/m0_57236802/article/details/134216395" target="_blank" rel="noreferrer">使用 GitHub Actions 在代码更新时自动部署代码到 VPS</a></li><li><a href="https://blog.csdn.net/weixin_43972992/article/details/135123018" target="_blank" rel="noreferrer">vitepress项目使用github的action自动部署到github-pages中</a></li><li><a href="https://github.com/axiaoxin/axiaoxin/issues/27" target="_blank" rel="noreferrer">使用Github Actions自动部署Golang应用到VPS服务器</a></li><li><a href="https://riddma.com/post/deploy-next-js-to-vps-using-github-actions" target="_blank" rel="noreferrer">使用 GitHub Actions 部署 Next.js 项目到 VPS</a></li></ol><div style="display:none;" data-pagefind-meta="base64:JTdCJTIydGFncyUyMiUzQSU1QiUyMk5vZGUlMjIlNUQlMkMlMjJkYXRlJTIyJTNBMTcxOTQxNzMzNDAwMCU3RA=="></div>`,18),p=[h];function k(r,d,o,c,g,E){return i(),a("div",null,p)}const u=s(l,[["render",k]]);export{A as __pageData,u as default};
