import{_ as e,o,c as i,a7 as s}from"./chunks/framework.CgLK9O2D.js";const a="/assets/%E6%97%A0%E5%8E%8B%E7%BC%A9.8MZ4p5md.jpg",t="/assets/gz.D2CCOhMm.jpg",c="/assets/br.C8qb9NO-.jpg",d="/assets/%E5%B7%B2%E5%8E%8B%E7%BC%A9%E7%9A%84%E6%95%B0%E6%8D%AE.BSjPFCCp.jpg",l="/assets/%E5%AE%9E%E9%AA%8C2%E6%97%A0%E5%8E%8B%E7%BC%A9.yLLsxy1n.jpg",p="/assets/%E5%AE%9E%E9%AA%8C2gz.CM0-O0Pl.jpg",r="/assets/%E5%AE%9E%E9%AA%8C2br.CKwblv9J.jpg",A=JSON.parse('{"title":"比较gz与br加载速度","description":"","frontmatter":{"tags":["Network"]},"headers":[],"relativePath":"Articles/Network/比较gz与br加载速度.md","filePath":"Articles/Network/比较gz与br加载速度.md","lastUpdated":1719417334000}'),n={name:"Articles/Network/比较gz与br加载速度.md"},h=s('<h1 id="比较gz与br加载速度" tabindex="-1">比较gz与br加载速度 <a class="header-anchor" href="#比较gz与br加载速度" aria-label="Permalink to &quot;比较gz与br加载速度&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>网络优化的方式有很多种，今天我们聊聊有限带宽下，通过文件压缩格式进行的优化。</p><h2 id="gz" tabindex="-1">gz <a class="header-anchor" href="#gz" aria-label="Permalink to &quot;gz&quot;">​</a></h2><p><code>gz</code> 是 <code>gnu zip</code> 的缩写，，压缩比可达到 <code>90%</code> 以上。</p><p>我用的宝塔面板默认开启 <code>gzip: on</code> ，所以我们需要先手动设置 <code>gzip: off</code>, 然后观察 <code>network</code> 加载或者 <code>webvitals</code> 插件数据</p><ol><li><p><code>gzip: off</code></p><p><img src="'+a+'" alt="无压缩" title="无压缩"></p></li><li><p><code>gzip: on</code></p><p><img src="'+t+'" alt="gz" title="gz"></p></li></ol><p>对比发现，<code>webvitals</code> 指标的时间差不多，但是 <code>network</code> 加载完成时间要快很多</p><h2 id="br" tabindex="-1">br <a class="header-anchor" href="#br" aria-label="Permalink to &quot;br&quot;">​</a></h2><p><code>br</code> 是 <code>Brotli</code> 的缩写，是 <code>Google</code> 出的一种文件压缩工具，根据 <code>Google</code> 的官方数据和实际使用经验，<code>Brotli</code> 相对于 <code>Gzip</code> 可以实现更高的压缩率，有时候可以达到 <code>20-30%</code> 的压缩率提升。</p><p><code>nginx</code> 安装 <code>brotli</code> 请参考之前的一篇文章<a href="/Articles/Network/宝塔nginx安装ngx_brotli.html">宝塔nginx安装ngx_brotli</a></p><p><img src="'+c+`" alt="br" title="br"></p><h2 id="分析" tabindex="-1">分析 <a class="header-anchor" href="#分析" aria-label="Permalink to &quot;分析&quot;">​</a></h2><p>我们用了一个简单的网页测试了无压缩，<code>gzip</code> 压缩，<code>br</code> 压缩分别在同样带宽下的表现。可以发现完成用时上，<code>gz</code> &lt; <code>br</code> &lt; <code>无压缩</code>，在 <code>webvitals</code> 数据表现 <code>gz</code> &lt; <code>无压缩</code> &lt; <code>br</code>。</p><p>那么为什么 <code>br</code> 没有达到预期的效果呢，我们分析主要有俩点原因：</p><ol><li><p>服务器压缩 <code>br</code> 需要额外的性能开销，影响的页面响应时间。</p></li><li><p>单个简单网页的测试条件有限，导致 <code>br</code> 压缩效果没有达到预期。</p></li></ol><p>那么我们改变条件，在同目录下放下已压缩好的 <code>gz</code> 文件和 <code>br</code> 文件，然后再次对比</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 压缩gzip</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gzip</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -9</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> index.html</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 压缩br</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> brotli-cli</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brotli-cli</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compress</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> index.html</span></span></code></pre></div><p><img src="`+d+'" alt="已压缩的数据" title="已压缩的数据"></p><p>可以看到文件大小 <code>br</code> &lt; <code>gz</code> &lt; <code>无压缩</code></p><p>我们把文件放到服务器，再次实验</p><ol><li><p>无压缩</p><p><img src="'+l+'" alt="实验2无压缩" title="实验2无压缩"></p></li><li><p><code>gzip</code></p><p><img src="'+p+'" alt="实验2gz" title="实验2gz"></p></li><li><p><code>br</code></p><p><img src="'+r+'" alt="实验2br" title="实验2br"></p></li></ol><p>真的尽力，从图上看，依旧没能达到 <code>google</code> 宣传的加载速度。</p><p>可能是简单页面测试条件有限，囊括的场景不多。<code>br</code> 其实是有用武之地的，我们去看 <code>cloudflare</code> 以及最大的同性交友网站: <code>github</code>, 对于 <code>html</code> , <code>xml</code> , <code>json</code> 等返回的是 <code>gzip</code>, <code>css</code>, <code>js</code> 返回的全是 <code>br</code> 格式。再反观国内，大流量电商网站 <code>jd</code> 和 <code>taobao</code> 所有资源都是返回 <code>gzip</code>。</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ol><li><a href="https://www.npmjs.com/package/brotli-cli" target="_blank" rel="noreferrer">brotli-cli</a></li></ol><div style="display:none;" data-pagefind-meta="base64:JTdCJTIydGFncyUyMiUzQSU1QiUyMk5ldHdvcmslMjIlNUQlMkMlMjJkYXRlJTIyJTNBMTcxOTQxNzMzNDAwMCU3RA=="></div>',27),g=[h];function k(b,_,m,z,C,E){return o(),i("div",null,g)}const B=e(n,[["render",k]]);export{A as __pageData,B as default};
