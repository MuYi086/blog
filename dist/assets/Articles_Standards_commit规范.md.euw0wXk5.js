import{_ as i,o as l,c as t,a7 as s}from"./chunks/framework.CgLK9O2D.js";const k=JSON.parse('{"title":"commit规范","description":"","frontmatter":{"tags":["Standards"]},"headers":[],"relativePath":"Articles/Standards/commit规范.md","filePath":"Articles/Standards/commit规范.md","lastUpdated":1719417334000}'),c={name:"Articles/Standards/commit规范.md"},a=s(`<h1 id="commit规范" tabindex="-1">commit规范 <a class="header-anchor" href="#commit规范" aria-label="Permalink to &quot;commit规范&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p><code>git</code> 提交 <code>commit</code> 需要遵循一定的规范。前端开发，有<code>eslint</code> , <code>stylelint</code> 这种解决方案，当然也有<code>commitlint</code></p><h2 id="常用类型" tabindex="-1">常用类型 <a class="header-anchor" href="#常用类型" aria-label="Permalink to &quot;常用类型&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">build 构建</p><ul><li>更新构建脚本（如 <code>Maven</code>、<code>Gradle</code> 等）</li><li>调整构建配置（如 <code>Travis CI</code>、<code>Jenkins</code> 等</li><li>升级构建工具版本</li><li>修改部署脚本</li><li>更新打包方式</li><li>调整编译选项</li></ul></div><div class="tip custom-block"><p class="custom-block-title">chore 配置文件修改</p><ul><li>代码格式化和排版调整</li><li>文档更新和补充</li><li>增加日志输出</li><li>重构代码结构</li><li>配置文件的修改</li><li>备份或删除文件</li><li>代码格式化和排版调整</li><li>更新依赖库版本</li><li>添加或修改注释</li></ul></div><div class="tip custom-block"><p class="custom-block-title">ci 持续集成</p><ul><li>更新持续集成配置文件（如 <code>Travis CI</code>、<code>Jenkins</code> 配置文件）</li><li>调整构建脚本以适配持续集成系统</li><li>更新测试脚本</li><li>修改自动化部署脚本</li><li>添加持续集成相关的说明文档</li></ul></div><div class="tip custom-block"><p class="custom-block-title">docs 文档</p><ul><li>更新 <code>README</code> 文件</li><li>修改项目文档</li><li>添加或更新注释</li><li>补充 <code>API</code> 文档</li><li>修改帮助文档</li><li>更新用户手册</li><li>删除过期或无效的文档</li></ul></div><div class="tip custom-block"><p class="custom-block-title">feat 新功能</p><ul><li>添加新功能或模块</li><li>实现新的业务逻辑</li><li>增加新的 <code>API</code> 端点</li><li>引入新的库或依赖</li><li>设计和开发新的用户界面</li><li>添加新的配置选项</li><li>增加新的功能测试</li></ul></div><div class="tip custom-block"><p class="custom-block-title">fix 修复</p><ul><li>修复程序中的逻辑错误</li><li>解决应用程序中的异常行为</li><li>修复应用程序的漏洞或安全问题</li><li>修复程序中可能导致崩溃或错误的代码部分</li><li>修正数据处理或计算的错误</li></ul></div><div class="tip custom-block"><p class="custom-block-title">perf 性能优化</p><ul><li>优化算法或数据结构</li><li>减少代码复杂度或提高代码执行效率</li><li>改进数据库查询性能</li><li>优化内存管理和资源占用</li><li>加速页面加载速度</li><li>提升系统响应速度和性能</li></ul></div><div class="tip custom-block"><p class="custom-block-title">refactor 重构</p><ul><li>重构代码以提高可读性和可维护性</li><li>优化代码结构，减少重复代码</li><li>改善代码性能或效率</li><li>调整变量、函数、类命名</li><li>清理无用的代码或注释</li><li>优化代码布局和格式</li></ul></div><div class="tip custom-block"><p class="custom-block-title">revert 回滚</p><ul><li>撤销之前引入的 <code>bug</code> 修复提交</li><li>回退引入新功能的提交</li><li>恢复错误的代码修改</li><li>取消意外的更改</li><li>退回不符合预期或错误的代码提交</li></ul></div><div class="tip custom-block"><p class="custom-block-title">style 样式</p><ul><li>调整代码缩进和格式，以符合团队的统一规范</li><li>规范化代码注释和文档的格式</li><li>统一代码命名规范</li><li>添加或删除空格、逗号等符号以提高代码可读性</li><li>消除无用的代码空行或注释</li><li>修正拼写错误或语法错误</li></ul></div><div class="tip custom-block"><p class="custom-block-title">test 测试</p><ul><li>添加新的测试用例</li><li>更新现有的测试用例，以适应代码变</li><li>修复测试用例中的错误或问题</li><li>优化测试用例的效率和覆盖率</li><li>更新测试框架或工具</li></ul></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># example (类型后跟随冒号+空格)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">feat:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature</span></span></code></pre></div><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ol><li><a href="https://github.com/conventional-changelog/commitlint" target="_blank" rel="noreferrer">commitlint 规范</a></li></ol><div style="display:none;" data-pagefind-meta="base64:JTdCJTIydGFncyUyMiUzQSU1QiUyMlN0YW5kYXJkcyUyMiU1RCUyQyUyMmRhdGUlMjIlM0ExNzE5NDE3MzM0MDAwJTdE"></div>`,19),e=[a];function o(d,n,p,r,m,u){return l(),t("div",null,e)}const b=i(c,[["render",o]]);export{k as __pageData,b as default};
