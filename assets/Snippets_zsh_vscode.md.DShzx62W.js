import{_ as t,c as e,o as d,av as o}from"./chunks/framework.B1bPfM8U.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Snippets/zsh/vscode.md","filePath":"Snippets/zsh/vscode.md","lastUpdated":1718246337000}'),i={name:"Snippets/zsh/vscode.md"},s=o('<h2 id="common-aliases" tabindex="-1">Common aliases <a class="header-anchor" href="#common-aliases" aria-label="Permalink to &quot;Common aliases&quot;">​</a></h2><table><thead><tr><th>Alias</th><th>Command</th><th>Description</th></tr></thead><tbody><tr><td>vsc</td><td>code .</td><td>Open the current folder in VS code</td></tr><tr><td>vsc <code>dir</code></td><td>code <code>dir</code></td><td>Open passed folder in VS code</td></tr><tr><td>vsca <code>dir</code></td><td>code --add <code>dir</code></td><td>Add folder(s) to the last active window</td></tr><tr><td>vscd <code>file</code> <code>file</code></td><td>code --diff <code>file</code> <code>file</code></td><td>Compare two files with each other.</td></tr><tr><td>vscg <code>file:line[:char]</code></td><td>code --goto <code>file:line[:char]</code></td><td>Open a file at the path on the specified line and character position.</td></tr><tr><td>vscn</td><td>code --new-window</td><td>Force to open a new window.</td></tr><tr><td>vscr</td><td>code --reuse-window</td><td>Force to open a file or folder in the last active window.</td></tr><tr><td>vscw</td><td>code --wait</td><td>Wait for the files to be closed before returning.</td></tr><tr><td>vscu <code>dir</code></td><td>code --user-data-dir <code>dir</code></td><td>Specifies the directory that user data is kept in. Can be used to open multiple distinct instances of Code.</td></tr><tr><td>vscp <code>profile</code></td><td>code --profile <code>profile</code></td><td>Specifies the profile to open Code with.</td></tr></tbody></table><h2 id="extensions-aliases" tabindex="-1">Extensions aliases <a class="header-anchor" href="#extensions-aliases" aria-label="Permalink to &quot;Extensions aliases&quot;">​</a></h2><table><thead><tr><th>Alias</th><th>Command</th><th>Description</th></tr></thead><tbody><tr><td>vsced <code>dir</code></td><td>code --extensions-dir <code>dir</code></td><td>Set the root path for extensions.</td></tr><tr><td>vscie <code>id or vsix-path</code></td><td>code --install-extension <code>extension-id&gt; or &lt;extension-vsix-path</code></td><td>Installs an extension.</td></tr><tr><td>vscue <code>id or vsix-path</code></td><td>code --uninstall-extension <code>id or vsix-path</code></td><td>Uninstalls an extension.</td></tr></tbody></table><h2 id="other-options" tabindex="-1">Other options: <a class="header-anchor" href="#other-options" aria-label="Permalink to &quot;Other options:&quot;">​</a></h2><table><thead><tr><th>Alias</th><th>Command</th><th>Description</th></tr></thead><tbody><tr><td>vscv</td><td>code --verbose</td><td>Print verbose output (implies --wait).</td></tr><tr><td>vscl <code>level</code></td><td>code --log <code>level</code></td><td>Log level to use. Default is &#39;info&#39;. Allowed values are &#39;critical&#39;, &#39;error&#39;, &#39;warn&#39;, &#39;info&#39;, &#39;debug&#39;, &#39;trace&#39;, &#39;off&#39;.</td></tr><tr><td>vscde</td><td>code --disable-extensions</td><td>Disable all installed extensions.</td></tr></tbody></table>',6),a=[s];function r(c,n,l,h,p,f){return d(),e("div",null,a)}const u=t(i,[["render",r]]);export{m as __pageData,u as default};
